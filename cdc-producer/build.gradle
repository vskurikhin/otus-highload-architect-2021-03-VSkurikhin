buildscript {
    def spring_boot_gradle_plugin = System.getProperty('VERSION_SPRING_BOOT_GRADLE_PLUGIN') ?: VERSION_SPRING_BOOT_GRADLE_PLUGIN
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_gradle_plugin}"
    }
}

plugins {
    id 'application'
    id 'idea'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
}

group = 'su.svn.cdc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

static def getEnv(key, defaultValue) {
    return System.getenv(key) ?: defaultValue
}

ext.libVers = [
        drv_org_postgresql              : getEnv('VERSION_DRV_ORG_POSTGRESQL', VERSION_DRV_ORG_POSTGRESQL),
        hibernate_validator             : getEnv('VERSION_HIBERNATE_VALIDATOR', VERSION_HIBERNATE_VALIDATOR),
        projectlombok                   : getEnv('VERSION_PROJECTLOMBOK', VERSION_PROJECTLOMBOK),
        slf4j                           : getEnv('VERSION_ORG_SLF4J_VERSION', VERSION_ORG_SLF4J_VERSION),
        spring_kafka                    : getEnv('VERSION_SPRING_KAFKA', VERSION_SPRING_KAFKA),
        springfox_swagger               : getEnv('VERSION_SPRINGFOX_SWAGGER', VERSION_SPRINGFOX_SWAGGER),
        version_jackson                 : getEnv('VERSION_JACKSON', VERSION_JACKSON),
        google_collections              : '1.0',
        guava                           : '29.0-jre',
        h2_database                     : '1.4.197',
        jsonwebtoken_jjwt               : '0.11.2',
        jsr305                          : '1.3.9',
        junit                           : '5.6.0',
        junit_platform_launcher         : '1.6.0',
        mockito_core                    : '3.2.4',
]

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.code.findbugs:jsr305:$libVers.jsr305"
    implementation "com.google.guava:guava:$libVers.guava"

    implementation "org.springframework.kafka:spring-kafka:$libVers.spring_kafka"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "io.debezium:debezium-api:1.3.0.Final"
    implementation("io.debezium:debezium-embedded:1.3.0.Final") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation "io.debezium:debezium-connector-mysql:1.3.0.Final"
    implementation "org.apache.avro:avro:1.10.1"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'
}

compileJava.inputs.files(processResources)

avro {
    createSetters = true
    fieldVisibility = "PRIVATE"
}

test {
    useJUnitPlatform()
}
